---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: $key1
spec:
  accessModes:
  - ReadWriteOnce
  awsElasticBlockStore:
    fsType: ext4
    volumeID: vol-0b094a7fba5c359e7
  capacity:
    storage: 20Gi
  persistentVolumeReclaimPolicy: Retain
  storageClassName: gp2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: $key1-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: gp2
  volumeName: $key1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: $key1
  namespace: default
  labels:
    app: $key1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: $key1
  template:
    metadata:
      labels:
        app: $key1
    spec:
      containers:
      - name: $key1
        image: splunk/splunk:latest
        env:
          - name: SPLUNK_START_ARGS
            value: "--accept-license --answer-yes"
          - name: SPLUNK_USER
            value: "splunk"
          - name: SPLUNK_PASSWORD
            value: "$key1@12345a"
#        command: ["SPLUNK_START_ARGS=--accept-license && SPLUNK_USER=splunk && SPLUNK_PASSWORD=lian.dashboard-lim.io"]
   #     args: ["SPLUNK_START_ARGS=--accept-license && SPLUNK_USER=splunk && SPLUNK_PASSWORD=lian.dashboard-lim.io && start"]
        imagePullPolicy: IfNotPresent
        # env:
        #   - name: version
        #     value: 1.0
        ports:
        - containerPort: 8000
          protocol: TCP
        - containerPort: 8191 
          protocol: TCP
        - containerPort: 9997
          protocol: TCP
        resources:
         requests:
           cpu: "500m"
      volumes:
      - name: $key1      
        persistentVolumeClaim:
          claimName: $key1-pvc
